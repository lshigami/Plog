basePath: /
definitions:
  api.CreatePostRequest:
    properties:
      content:
        type: string
      title:
        maxLength: 255
        minLength: 3
        type: string
    required:
    - content
    - title
    type: object
  api.LoginUserRequest:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  api.LoginUserResponse:
    properties:
      access_token:
        type: string
      user:
        $ref: '#/definitions/api.UserResponse'
    type: object
  api.RegisterUserRequest:
    properties:
      password:
        minLength: 6
        type: string
      username:
        maxLength: 50
        minLength: 3
        type: string
    required:
    - password
    - username
    type: object
  api.SwaggerPost:
    description: A blog post
    properties:
      content:
        type: string
      created_at:
        type: string
      id:
        type: integer
      title:
        type: string
      updated_at:
        type: string
      user_id:
        type: integer
      username:
        type: string
    type: object
  api.UpdatePostRequest:
    properties:
      content:
        type: string
      title:
        maxLength: 255
        minLength: 3
        type: string
    required:
    - content
    - title
    type: object
  api.UserResponse:
    properties:
      created_at:
        type: string
      id:
        type: integer
      username:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@example.com
    name: API Support
  description: A RESTful API for a blog application
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Blog API
  version: "1.0"
paths:
  /login:
    post:
      consumes:
      - application/json
      description: Authenticate a user and return an access token
      parameters:
      - description: User login credentials
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.LoginUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Login successful
          schema:
            $ref: '#/definitions/api.LoginUserResponse'
        "400":
          description: Invalid input
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Invalid username or password
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Login a user
      tags:
      - authentication
  /posts:
    get:
      consumes:
      - application/json
      description: Get a list of posts with pagination
      parameters:
      - description: Limit
        in: query
        maximum: 100
        minimum: 1
        name: limit
        required: true
        type: integer
      - description: Offset
        in: query
        minimum: 0
        name: offset
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: List of posts
          schema:
            items:
              $ref: '#/definitions/api.SwaggerPost'
            type: array
        "400":
          description: Invalid input
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: List posts
      tags:
      - posts
    post:
      consumes:
      - application/json
      description: Create a new blog post
      parameters:
      - description: Post details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.CreatePostRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Post created successfully
          schema:
            $ref: '#/definitions/api.SwaggerPost'
        "400":
          description: Invalid input
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Create a new post
      tags:
      - posts
  /posts/{id}:
    get:
      consumes:
      - application/json
      description: Get details of a specific post by its ID
      parameters:
      - description: Post ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Post details
          schema:
            $ref: '#/definitions/api.SwaggerPost'
        "400":
          description: Invalid post ID format
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Post not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get a post by ID
      tags:
      - posts
    put:
      consumes:
      - application/json
      description: Update a post's title and content
      parameters:
      - description: Post ID
        in: path
        name: id
        required: true
        type: integer
      - description: Updated post details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.UpdatePostRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Updated post
          schema:
            $ref: '#/definitions/api.SwaggerPost'
        "400":
          description: Invalid input
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Post not found or no permission
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Update a post
      tags:
      - posts
  /register:
    post:
      consumes:
      - application/json
      description: Register a new user with username and password
      parameters:
      - description: User registration details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.RegisterUserRequest'
      produces:
      - application/json
      responses:
        "201":
          description: User created successfully
          schema:
            $ref: '#/definitions/api.UserResponse'
        "400":
          description: Invalid input
          schema:
            additionalProperties:
              type: string
            type: object
        "409":
          description: Username already exists
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Register a new user
      tags:
      - authentication
securityDefinitions:
  BearerAuth:
    description: Type "Bearer" followed by a space and the JWT token.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
